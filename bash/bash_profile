BASE16_SHELL=$HOME/.config/base16-shell/
[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"

[[ -s "$HOME/.profile" ]] && source "$HOME/.profile" # Load the default .profile

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

export TERM=xterm-256color

export NVM_DIR=~/.nvm
. $(brew --prefix nvm)/nvm.sh

if [ -f ~/.config/bash/git-completion.bash  ]; then
    . ~/.config/bash/git-completion.bash
fi
#export PATH=$PATH:/usr/local/sbin

#current branch in git repo
function parse_git_branch() {
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    if [ ! "${BRANCH}" == "" ]
    then
        STAT=`parse_git_dirty`
        echo "[${BRANCH}${STAT}]"
    else
        echo ""
    fi
}

function node_version() {
    NODE_VERSION=`nvm current`
    echo "[${NODE_VERSION}]"
}

# get current status of git repo
function parse_git_dirty {
    status=`git status 2>&1 | tee`
    dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
    untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
    ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
    newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
    renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
    deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
    bits=''
    if [ "${renamed}" == "0" ]; then
        bits=">${bits}"
    fi
    if [ "${ahead}" == "0" ]; then
        bits="*${bits}"
    fi
    if [ "${newfile}" == "0" ]; then
        bits="+${bits}"
    fi
    if [ "${untracked}" == "0" ]; then
        bits="?${bits}"
    fi
    if [ "${deleted}" == "0" ]; then
        bits="x${bits}"
    fi
    if [ "${dirty}" == "0" ]; then
        bits="!${bits}"
    fi
    if [ ! "${bits}" == "" ]; then
        echo " ${bits}"
    else
        echo ""
    fi
}

function show_jobs() {
  echo `jobs | sed -n -E 's/^\[([0-9])\]. +[a-zA-Z]+ +(.+)$/\1:\2/p' | tr '\n' ' ' | awk '{print "[ "$0"]"}'`
}

export PS1="\w \e[90m\`parse_git_branch\` \`show_jobs\`\e[0m\n\\$ "
export PROMPT_COMMAND='echo -ne "\033]0;${PWD##*/}\007"'
export VISUAL=nvim
export EDITOR="$VISUAL"
export GIT_EDITOR=nvim

alias gitgraph="git log --graph --all --decorate --oneline"
alias vim="nvim"
alias compose="docker-compose"
alias ne='PATH=$(npm bin):$PATH'

alias ghci='docker run -it --rm -v $(pwd):/app -w /app haskell ghci'
alias ghc='docker run -it --rm -v $(pwd):/app -w /app haskell ghc'
alias composer='docker run --rm -v $(pwd):/app -w /app composer/composer'
alias php='docker run --rm -it -v $(pwd):/app -p 8000:8000 -w /app php php'

export POCKET_KEY=46462-3c0e5926fd11ca22c6eac040
export READABILITY_KEY=a8bdf1825ad4dd57c24a90cd57591335e4bbffdc
