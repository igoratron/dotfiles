[ -f ~/.fzf.bash ] && source ~/.fzf.bash

source ~/.config/bash/secrets

export TERM=screen-256color

export NVM_DIR="$HOME/.nvm"
  [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"  # This loads nvm bash_completion

if [ -f ~/.config/bash/git-completion.bash  ]; then
  . ~/.config/bash/git-completion.bash
fi

export PROJECTS_ROOT=~/Development/fc

function bump-version() {
  npm --no-git-tag-version version $1 && git ci -m "Bump version" -- package.json
}

function create-branch() {
  ISSUE=$1
  BRANCH=$(curl -s -q -u $JIRA_USER:$JIRA_TOKEN https://jira.fundingcircle.com/rest/api/latest/issue/$ISSUE | jq -r '.key + "-" + .fields.summary' | sed -E 's/\W+/-/g' | tr '[:upper:]' '[:lower:]')
  git fp
  git co -b $BRANCH
}

function publish-image() {
  docker build -t quay.io/fundingcircle/$(basename $PWD):$1 --build-arg BUNDLE_FUNDINGCIRCLE__JFROG__IO --build-arg BUNDLE_GEM__FURY__IO --build-arg ARTIFACTORY_USER --build-arg ARTIFACTORY_TOKEN . 
  docker push quay.io/fundingcircle/$(basename $PWD):$1
}

export FZF_DEFAULT_COMMAND='ag --ignore node_modules -g ""'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# prompt style
function parse_git_branch() {
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    if [ ! "${BRANCH}" == "" ]
    then
        echo "[${BRANCH}]"
    else
        echo ""
    fi
}

function show_jobs() {
  echo `jobs | sed -n -E 's/^\[([0-9])\]. +[a-zA-Z]+ +(.+)$/\1:\2/p' | tr '\n' ' ' | awk '{print "[ "$0"]"}'`
}

grey="\[$(tput setaf 240)\]"
green="\[$(tput setaf 42)\]"
reset="\[$(tput sgr0)\]"
export PS1="\w $grey\`parse_git_branch\` \`show_jobs\`$green\nâ‰« $reset"
export PROMPT_COMMAND='echo -ne "\033]0;${PWD##*/}\007"'

export VISUAL=nvim
export EDITOR="$VISUAL"
export GIT_EDITOR=nvim

alias vim="nvim"
alias compose="docker-compose"

alias npm-run="cat package.json | jq '.scripts' | tail -n +2 | tail -r | tail -n +2 | cut -d '\"' -f 2 | fzf | xargs npm run"
alias git-show="git log --oneline | fzf --preview 'echo {} | cut -d \" \" -f 1 | xargs git show | diff-so-fancy' | cut -d \" \" -f 1 | xargs git show"
alias resolve-conflict='git st -s | grep '\''UU'\'' | tail -n 1 | awk '\''{print $2}'\'' | xargs -o nvim +Gvdiffsplit!'
alias tree='tree -I node_modules'
